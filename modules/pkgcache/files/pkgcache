#!/usr/bin/python

import os, cgi, sqlite3, time, re, tempfile, shutil

storagedir = "/var/www/pkgcache"
if not os.path.exists(storagedir):
    os.makedirs(storagedir)

conn = sqlite3.connect(os.path.join(storagedir, "data.db"))
c = conn.cursor()
c.execute("CREATE TABLE IF NOT EXISTS pkgcache (dt long, distro_name text, uuid_pkg text, uuid_src text, filename text)")
conn.commit()

form = cgi.FieldStorage()

re_uuids = re.compile("^/([0-9a-zA-Z]+)/([0-9a-f]{40})/([0-9a-f]{40})$")
def do_post():
    m = re_uuids.match(os.environ.get("PATH_INFO", ""))
    if not m:
        print "Status: 400 Bad Request\r\n\r\n"
        print os.environ.get("PATH_INFO", "")
        print "One of uuid_pkg or uuid_src is the wrong format"
        return

    # We are going to require 1 input
    # file : should be multipart/form-data of type file
    if not form.has_key("file"):
        print "Status: 400 Bad Request\r\n\r\n"
        print "Missing file"
        return

    if not form["file"].filename:
        print "Status: 400 Bad Request\r\n\r\n"
        print "file not uploaded correctly"
        return

    print "Content-Type: text/html\n"
    distro_name = m.group(1)
    uuid_pkg = m.group(2)
    uuid_src =m.group(3)

    fp = form["file"].file
    filename = form["file"].filename

    # strip out any "/"
    relativefilename = os.path.join(distro_name, uuid_src[:2], filename.split("/")[-1])
    absolutefilename = os.path.join(storagedir, relativefilename)

    if not os.path.exists(os.path.split(absolutefilename)[0]):
        os.makedirs(os.path.split(absolutefilename)[0])

    fpout = tempfile.NamedTemporaryFile(delete=False)
    for x in range(100): # ~ 20MB limit
        data = fp.read(262144) # 256k
        if data == "": break
        fpout.write(data)
    fpout.close()
    shutil.move(fpout.name, absolutefilename,)

    c.execute("INSERT INTO pkgcache (dt, distro_name, uuid_pkg, uuid_src, filename) VALUES (%d, '%s', '%s', '%s', '%s')"%(time.time(), distro_name, uuid_pkg, uuid_src, relativefilename))

def do_get():

    m = re_uuids.match(os.environ.get("PATH_INFO", ""))
    if not m:
        print "Status: 400 Bad Request\r\n\r\n"
        print "One of uuid_pkg or uuid_src is the wrong format."
        return

    print "Content-Type: text/html\n"
    distro_name = m.group(1)
    uuid_pkg = m.group(2)
    uuid_src =m.group(3)

    filenameswehad = []
    for dt, distro_name, uuid_pkg, uuid_src, filename in c.execute("SELECT * FROM pkgcache WHERE distro_name = '%s' AND uuid_pkg = '%s' AND uuid_src = '%s' ORDER BY dt DESC" % (distro_name, uuid_pkg, uuid_src)):
        if filename in filenameswehad: continue
        filenameswehad.append(filename)
        print filename

if __name__ == "__main__":
    try:
        if os.environ.get("REQUEST_METHOD", "GET") == "POST":
            do_post()
        elif os.environ.get("REQUEST_METHOD", "GET") == "GET":
            do_get()
    finally:
        conn.commit()
        c.close()
